{"version":3,"sources":["Assets/success1.svg","Assets/contactus.svg","Components/ContactForm/ContactFormStyle.js","Components/ContactForm/ContactForm.js","Views/ContactStyle.js","Views/Contact.js"],"names":["module","exports","StyledForm","styled","Form","props","theme","lightGrey","veryLightGrey","buttonOrange","white","StyledError","ErrorMessage","ContactForm","name","component","type","className","placeholder","StyledContact","div","StyledSuccess","StyledSpinner","validationSchema","yup","shape","email","required","min","message","initialValues","ContactPage","useState","submmited","setSubmitted","spinning","setSpinning","Spinner","src","SuccessImage","alt","onSubmit","values","actions","axiosWithBase","post","then","catch","toast","error","position","bodyClassName","autoClose","closeButton","HeroImage"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,gnCCGpC,IAAMC,EAAaC,YAAOC,IAAPD,CAAH,KAWG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,aAMrB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,iBAIrB,SAAAH,GAAK,OAAIA,EAAMC,MAAME,iBAMvB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,gBAChC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,SAarBC,EAAcR,YAAOS,IAAPT,CAAH,KCVTU,MA9Bf,WACI,OACI,kBAACX,EAAD,KACI,kBAACS,EAAD,CAAaG,KAAK,OAAOC,UAAU,QACnC,kBAAC,IAAD,CACID,KAAK,OACLE,KAAK,OACLC,UAAU,QACVC,YAAY,cAEhB,kBAACP,EAAD,CAAaG,KAAK,QAAQC,UAAU,QACpC,kBAAC,IAAD,CACID,KAAK,QACLE,KAAK,QACLC,UAAU,QACVC,YAAY,eAEhB,kBAACP,EAAD,CAAaG,KAAK,UAAUC,UAAU,QACtC,kBAAC,IAAD,CACID,KAAK,UACLE,KAAK,OACLC,UAAU,gBACVC,YAAY,iBAEhB,4BAAQF,KAAK,UAAb,Y,i9DC1BL,IAAMG,EAAgBhB,IAAOiB,IAAV,KA8DblB,EAAaC,IAAOiB,IAAV,KAMVC,EAAgBlB,IAAOiB,IAAV,KAoBbE,EAAgBnB,IAAOiB,IAAV,KC9EpBG,EAAmBC,WAAaC,MAAM,CACxCC,MAAOF,WAEFE,QACAC,WACLb,KAAMU,WAEDG,WACAC,IAAI,GACTC,QAASL,WAEJG,aAGHG,EAAgB,CAClBJ,MAAO,GACPZ,KAAM,GACNe,QAAS,IA8DEE,UA3Df,WAAwB,IAAD,EACeC,oBAAS,GADxB,mBACZC,EADY,KACDC,EADC,OAEaF,oBAAS,GAFtB,mBAEZG,EAFY,KAEFC,EAFE,KAiBnB,OACI,kBAACjB,EAAD,KACI,yBAAKF,UAAU,oBACX,yBAAKA,UAAU,eACVkB,EAAW,kBAACb,EAAD,KAAe,kBAACe,EAAA,EAAD,OAEvB,oCACI,0CACA,wHAGEJ,EASI,kBAACZ,EAAD,KACE,6CACA,yBAAKiB,IAAKC,IAAcC,IAAI,WAVhC,kBAAC,EAAD,KACI,kBAAC,IAAD,CACIV,cAAeA,EACfP,iBAAkBA,EAClBkB,SA7Bd,SAACC,EAAQC,GAC3BP,GAAY,GACZQ,cACKC,KAAK,qBAAsBH,GAC3BI,MAAK,WACFV,GAAY,GACZF,GAAa,MAEhBa,OAAM,WACHX,GAAY,GACZY,IAAMC,MAAM,iCAoBYlC,UAAWF,KAQvB,kBAAC,IAAD,CACIqC,SAAS,cACTC,cAAc,QACdC,UAAW,IACXC,aAAa,MAK7B,yBAAKpC,UAAU,gBACX,yBAAKqB,IAAKgB,IAAWd,IAAI","file":"static/js/15.7f0e49b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/success1.6031ef66.svg\";","module.exports = __webpack_public_path__ + \"static/media/contactus.79c1159f.svg\";","import styled from \"styled-components\";\r\nimport { Form, ErrorMessage } from \"formik\";\r\n\r\nexport const StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 50px;\r\n    padding-left: 10px;\r\n    border-radius: 5px;\r\n    border: solid 0.5px ${props => props.theme.lightGrey};\r\n    font-size: 1.4rem;\r\n    transition: background-color 0.2s ease-in-out;\r\n    margin-bottom: 20px;\r\n\r\n    :hover {\r\n      background-color: ${props => props.theme.veryLightGrey};\r\n      transition: background-color 0.2s ease-in-out;\r\n    }\r\n    :focus {\r\n      background-color: ${props => props.theme.veryLightGrey};\r\n      outline: none;\r\n    }\r\n  }\r\n  button {\r\n    margin: 40px auto;\r\n    background-color: ${props => props.theme.buttonOrange};\r\n    color: ${props => props.theme.white};\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 2rem;\r\n    padding: 0.6rem 5rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n      opacity: 0.7;\r\n      transition: opacity 0.1s ease-in-out;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledError = styled(ErrorMessage)`\r\n  color: red;\r\n  padding: 0.5rem 0;\r\n  font-size: 1rem;\r\n`;\r\n","import React from 'react';\r\nimport { Field } from 'formik';\r\nimport { StyledForm, StyledError } from './ContactFormStyle';\r\n\r\nfunction ContactForm() {\r\n    return (\r\n        <StyledForm>\r\n            <StyledError name='name' component='div' />\r\n            <Field\r\n                name='name'\r\n                type='text'\r\n                className='field'\r\n                placeholder='Your Name'\r\n            />\r\n            <StyledError name='email' component='div' />\r\n            <Field\r\n                name='email'\r\n                type='email'\r\n                className='field'\r\n                placeholder='Your Email'\r\n            />\r\n            <StyledError name='message' component='div' />\r\n            <Field\r\n                name='message'\r\n                type='text'\r\n                className='field message'\r\n                placeholder='Your Message'\r\n            />\r\n            <button type=\"submit\">Submit</button>\r\n        </StyledForm>\r\n\r\n    )\r\n}\r\n\r\nexport default ContactForm;","import styled from 'styled-components'\r\n\r\nexport const StyledContact = styled.div`\r\nwidth: 100vw;\r\nheight: 90vh;\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\n    .contactContainer {\r\n        width: 100vw;\r\n        height: 70vh;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        @media(max-width: 1000px){\r\n            justify-content: center;\r\n        }\r\n\r\n        .contactLeft {\r\n            width: 50%;\r\n            height: 100%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding-left: 150px;\r\n            padding-right: 70px;\r\n            padding-top: 40px;\r\n\r\n            @media(max-width: 1000px){\r\n                width: 80%;\r\n                padding-right: 10px;\r\n                padding-left: 0px;\r\n                align-items: center;\r\n            }\r\n\r\n\r\n            h1 {\r\n                font-size: 4rem;\r\n                font-weight: 200;\r\n                margin-bottom: 20px;\r\n            }\r\n\r\n            p {\r\n                font-size: 1.5rem;\r\n                margin-bottom: 4rem;\r\n            }\r\n        }\r\n\r\n        .contactRight {\r\n        width: 44%;\r\n        height: 100%;\r\n\r\n        @media(max-width: 1000px){\r\n            display: none;\r\n        }\r\n\r\n        img {\r\n            max-width: 100%;\r\n            height: auto;\r\n            margin-top: 30px;\r\n        }\r\n        }\r\n    }\r\n`\r\n\r\nexport const StyledForm = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledSuccess = styled.div`\r\nwidth: 380px;\r\nheight: 380px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n\r\n@media(max-width: 1000px){\r\n    width: 80%;\r\n}\r\n\r\nh3 {\r\n    font-size: 2rem;\r\n    padding-bottom: 2rem;\r\n}\r\n    img {\r\n        max-width: 100%;\r\n        height: auto;\r\n    }\r\n`\r\nexport const StyledSpinner = styled.div`\r\nwidth: 100%;\r\nheight: 100%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n`","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport HeroImage from '../Assets/contactus.svg'\r\nimport SuccessImage from '../Assets/success1.svg'\r\nimport ContactForm from '../Components/ContactForm/ContactForm';\r\nimport Spinner from '../Components/Spinner';\r\nimport { axiosWithBase } from '../AxiosCustom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { StyledContact, StyledForm, StyledSuccess, StyledSpinner } from './ContactStyle';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    email: yup\r\n        .string()\r\n        .email()\r\n        .required(),\r\n    name: yup\r\n        .string()\r\n        .required()\r\n        .min(2),\r\n    message: yup\r\n        .string()\r\n        .required(),\r\n});\r\n\r\nconst initialValues = {\r\n    email: '',\r\n    name: '',\r\n    message: ''\r\n};\r\n\r\nfunction ContactPage() {\r\n    const [submmited, setSubmitted] = useState(false);\r\n    const [spinning, setSpinning] = useState(false)\r\n\r\n    const submitMessage = (values, actions) => {\r\n        setSpinning(true);\r\n        axiosWithBase()\r\n            .post('/contact/contactus', values)\r\n            .then(() => {\r\n                setSpinning(false);\r\n                setSubmitted(true);\r\n            })\r\n            .catch(() => {\r\n                setSpinning(false);\r\n                toast.error(\"Error submitting message.\")\r\n            })\r\n    };\r\n    return (\r\n        <StyledContact>\r\n            <div className=\"contactContainer\">\r\n                <div className=\"contactLeft\">\r\n                    {spinning ? <StyledSpinner><Spinner /></StyledSpinner>\r\n                        :\r\n                        <>\r\n                            <h1>Contact Us</h1>\r\n                            <p>Want to get in touch? Use the form below and we will get back to you\r\n                                as soon as possible.\r\n                    </p>\r\n                            {!submmited ?\r\n                                <StyledForm>\r\n                                    <Formik\r\n                                        initialValues={initialValues}\r\n                                        validationSchema={validationSchema}\r\n                                        onSubmit={submitMessage}\r\n                                        component={ContactForm}\r\n                                    />\r\n                                </StyledForm>\r\n                                : <StyledSuccess>\r\n                                    <h3>Message Sent!</h3>\r\n                                    <img src={SuccessImage} alt='tick!' />\r\n                                </StyledSuccess>\r\n                            }\r\n                            <ToastContainer\r\n                                position=\"bottom-left\"\r\n                                bodyClassName=\"toast\"\r\n                                autoClose={3000}\r\n                                closeButton={false}\r\n                            />\r\n                        </>\r\n                    }\r\n                </div>\r\n                <div className=\"contactRight\">\r\n                    <img src={HeroImage} alt=\"Man with mail\" />\r\n                </div>\r\n            </div>\r\n        </StyledContact>\r\n    )\r\n}\r\n\r\nexport default ContactPage;"],"sourceRoot":""}