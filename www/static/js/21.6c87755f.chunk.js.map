{"version":3,"sources":["Components/resetPassword/ResetPasswordFormik.jsx","Components/resetPassword/ResetPasswordForm.jsx"],"names":["StyledForm","styled","Form","props","theme","white","lightGrey","buttonOrange","ResetPasswordFormik","name","type","placeholder","initialValues","email","validationSchema","yup","shape","required","StyledBackground","div","connect","state","actionCreators","history","loadingStarted","loadingFinished","useState","spinning","setSpinning","className","style","width","height","display","justifyContent","alignItems","Spinner","onSubmit","values","action","axiosWithBase","post","then","resetForm","push","catch","error","toast","response","data","component","position","bodyClassName","autoClose","closeButton"],"mappings":"4sCAIA,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,KAWQ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,SAoBnB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aAOvB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,gBAChC,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,SAqBnBG,EATa,WAC1B,OACE,kBAACR,EAAD,KACE,kBAAC,IAAD,CAAOS,KAAK,QAAQC,KAAK,QAAQC,YAAY,qBAC7C,4BAAQD,KAAK,UAAb,U,u9CCzCN,IAAME,EAAgB,CACpBC,MAAO,IAGHC,EAAmBC,WAAaC,MAAM,CAC1CH,MAAOE,WAEJF,QACAI,aAGCC,EAAmBjB,IAAOkB,IAAV,KAkCP,SAAAhB,GAAK,OAAIA,EAAMC,MAAME,aAO9BN,EAAaC,IAAOkB,IAAV,KAsEDC,uBAAQ,SAAAC,GAAK,OAAIA,IAAOC,EAAxBF,EAlEW,SAAC,GAAkD,IAAhDG,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,gBAAsB,EAC1CC,oBAAS,GADiC,mBACnEC,EADmE,KACzDC,EADyD,KAoB1E,OAAID,EAEA,kBAACT,EAAD,KACE,yBAAKW,UAAU,aACb,yBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,kBAACC,EAAA,EAAD,SAOR,kBAAClB,EAAD,KACE,yBAAKW,UAAU,aACb,wDACA,6HAIA,kBAAC,EAAD,KACE,kBAAC,IAAD,CACEf,iBAAkBA,EAClBF,cAAeA,EACfyB,SAjDoB,SAACC,EAAQC,GACrCX,GAAY,GACZJ,IACAgB,cACGC,KAAK,iBAAkBH,GACvBI,MAAK,WACJd,GAAY,GACZW,EAAOI,YACPlB,IACAF,EAAQqB,KAAK,yBAEdC,OAAM,SAAAC,GACLlB,GAAY,GACZH,IACAsB,IAAMD,MAAMA,EAAME,SAASC,UAoCvBC,UAAW1C,IAEb,kBAAC,IAAD,CACE2C,SAAS,cACTC,cAAc,QACdC,UAAW,IACXC,aAAa","file":"static/js/21.6c87755f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100%;\r\n\r\n  input {\r\n    width: 440px;\r\n    height: 60px;\r\n    margin: 2rem 0 1.5rem 0;\r\n    background-color: rgba(238, 243, 248, 0.5);\r\n    border: 1px solid ${props => props.theme.white};\r\n    transition: all 0.3s ease-in-out;\r\n    border-radius: 5px;\r\n    padding-left: 1rem;\r\n    font-size: 1.5rem;\r\n\r\n    @media (max-width: 590px) {\r\n      width: 360px;\r\n    }\r\n\r\n    @media (max-width: 370px) {\r\n      width: 270px;\r\n    }\r\n\r\n    :hover {\r\n      background-color: rgba(238, 243, 248, 0.1);\r\n      transition: all 0.3s ease-in-out;\r\n    }\r\n\r\n    :focus {\r\n      border: 1px solid ${props => props.theme.lightGrey};\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin: 0 auto;\r\n    background-color: ${props => props.theme.buttonOrange};\r\n    color: ${props => props.theme.white};\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 2rem;\r\n    padding: 0.6rem 5rem;\r\n    &:hover {\r\n      opacity: 0.7;\r\n      transition: opacity 0.1s ease-in-out;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ResetPasswordFormik = () => {\r\n  return (\r\n    <StyledForm>\r\n      <Field name=\"email\" type=\"email\" placeholder=\"Enter your email\" />\r\n      <button type=\"submit\">Send</button>\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordFormik;\r\n","// DEPENDENCIES\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// HELPERS\r\nimport * as actionCreators from \"../../store/Actions/actionCreators\";\r\nimport { axiosWithBase } from \"../../AxiosCustom\";\r\n\r\n// COMPONENTS\r\nimport ResetPasswordFormik from \"./ResetPasswordFormik\";\r\nimport Spinner from '../Spinner';\r\n\r\nconst initialValues = {\r\n  email: \"\"\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required()\r\n});\r\n\r\nconst StyledBackground = styled.div`\r\n  background-color: #ffffff;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='40' height='40' viewBox='0 0 40 40'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23c7c7c7' fill-opacity='0.4'%3E%3Cpath d='M0 38.59l2.83-2.83 1.41 1.41L1.41 40H0v-1.41zM0 1.4l2.83 2.83 1.41-1.41L1.41 0H0v1.41zM38.59 40l-2.83-2.83 1.41-1.41L40 38.59V40h-1.41zM40 1.41l-2.83 2.83-1.41-1.41L38.59 0H40v1.41zM20 18.6l2.83-2.83 1.41 1.41L21.41 20l2.83 2.83-1.41 1.41L20 21.41l-2.83 2.83-1.41-1.41L18.59 20l-2.83-2.83 1.41-1.41L20 18.59z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\r\n  height: 91vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .container {\r\n    width: 500px;\r\n    height: 300px;\r\n    background-color: white;\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.09), 0 10px 10px rgba(0, 0, 0, 0.09);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media(max-width: 590px) {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 2.5rem;\r\n      font-weight: bold;\r\n      color: rgba(0, 0, 25, 0.8);\r\n      margin: 5rem 0 1rem 0;\r\n\r\n      @media (max-width: 590px) {\r\n        font-size: 1.8rem;\r\n      }\r\n    }\r\n    p {\r\n      font-size: 1.5rem;\r\n      color: ${props => props.theme.lightGrey};\r\n      width: 80%;\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.div`\r\n  max-width: 800px;\r\n`;\r\n\r\nconst ResetPasswordForm = ({ history, loadingStarted, loadingFinished }) => {\r\n  const [spinning, setSpinning] = useState(false);\r\n  const onResetPasswordHandle = (values, action) => {\r\n    setSpinning(true);\r\n    loadingStarted();\r\n    axiosWithBase()\r\n      .post(\"/resetpassword\", values)\r\n      .then(() => {\r\n        setSpinning(false);\r\n        action.resetForm();\r\n        loadingFinished();\r\n        history.push(\"/resetpasswordsent\");\r\n      })\r\n      .catch(error => {\r\n        setSpinning(false);\r\n        loadingFinished();\r\n        toast.error(error.response.data);\r\n      });\r\n  };\r\n\r\n  if (spinning) {\r\n    return (\r\n      <StyledBackground>\r\n        <div className=\"container\">\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <Spinner />\r\n          </div>\r\n        </div>\r\n      </StyledBackground>\r\n    );\r\n  }\r\n  return (\r\n    <StyledBackground>\r\n      <div className=\"container\">\r\n        <h1>Forgotten your password?</h1>\r\n        <p>\r\n          Enter your email address in the form below and we will send you a link\r\n          to reset your password.\r\n        </p>\r\n        <StyledForm>\r\n          <Formik\r\n            validationSchema={validationSchema}\r\n            initialValues={initialValues}\r\n            onSubmit={onResetPasswordHandle}\r\n            component={ResetPasswordFormik}\r\n          />\r\n          <ToastContainer\r\n            position=\"bottom-left\"\r\n            bodyClassName=\"toast\"\r\n            autoClose={3000}\r\n            closeButton={false}\r\n          />\r\n        </StyledForm>\r\n      </div>\r\n    </StyledBackground>\r\n  );\r\n};\r\n\r\nexport default connect(state => state, actionCreators)(ResetPasswordForm);\r\n"],"sourceRoot":""}